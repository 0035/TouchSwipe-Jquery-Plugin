(function($)
{$.fn.swipe=function(options)
{var defaults={debug:false,fingers:1,threshold:75,swipe:function(event,direction){if(defaults.debug)console.log("swiped "+direction);},swipeLeft:function(event){},swipeRight:function(event){},swipeUp:function(event){},swipeDown:function(event){},triggerOnTouchEnd:true,swipeStatus:null};var options=$.extend(defaults,options);if(!this)return false;var LEFT="left";var RIGHT="right";var UP="up";var DOWN="down";var NONE="none";var phase="start";var PHASE_START="start";var PHASE_MOVE="move";var PHASE_END="end";var PHASE_CANCEL="cancel";var touchCycleComplete=false;return this.each(function()
{var triggerElementID=null;var fingerCount=0;var start={x:0,y:0};var end={x:0,y:0};var delta={x:0,y:0};function touchStart(event)
{phase=PHASE_START;event.preventDefault();fingerCount=event.touches.length;if(fingerCount==defaults.fingers)
{start.x=event.touches[0].pageX;start.y=event.touches[0].pageY;if(defaults.swipeStatus)
triggerHandler(event,phase);}
else
{touchCancel(event);}}
function touchMove(event)
{if(phase==PHASE_END||phase==PHASE_CANCEL)
return;phase=PHASE_MOVE;event.preventDefault();if(event.touches.length==defaults.fingers)
{end.x=event.touches[0].pageX;end.y=event.touches[0].pageY;var distance=null;if(defaults.swipeStatus)
{distance=caluculateDistance();direction=caluculateDirection();triggerHandler(event,phase,direction,distance);}
if(!defaults.triggerOnTouchEnd)
{if(!distance)
distance=caluculateDistance();if(distance>=defaults.threshold)
{phase=PHASE_END;direction=caluculateDirection();triggerHandler(event,phase,direction,distance);touchCancel(event);}}}
else
{phase=PHASE_CANCEL;triggerHandler(event,phase);touchCancel(event);}}
function touchEnd(event)
{event.preventDefault();if(defaults.triggerOnTouchEnd)
{phase=PHASE_END;if(fingerCount==defaults.fingers&&end.x!=0)
{var distance=caluculateDistance();if(distance>=defaults.threshold)
{direction=caluculateDirection();triggerHandler(event,phase,direction,distance);touchCancel(event);}
else
{phase=PHASE_CANCEL;triggerHandler(event,phase,direction,distance);touchCancel(event);}}
else
{phase=PHASE_CANCEL;triggerHandler(event,phase);touchCancel(event);}}
else if(phase==PHASE_MOVE)
{phase=PHASE_CANCEL;triggerHandler(event,phase);touchCancel(event);}}
function touchCancel(event)
{fingerCount=0;start.x=0;start.y=0;end.x=0;end.y=0;delta.x=0;delta.y=0;}
function caluculateDistance()
{return Math.round(Math.sqrt(Math.pow(end.x-start.x,2)+Math.pow(end.y-start.y,2)));}
function caluculateAngle()
{var X=start.x-end.x;var Y=end.y-start.y;var Z=Math.round(Math.sqrt(Math.pow(X,2)+Math.pow(Y,2)));var r=Math.atan2(Y,X);var angle=0;angle=Math.round(r*180/Math.PI);if(angle<0)
angle=360-Math.abs(angle);return angle;}
function caluculateDirection()
{var angle=caluculateAngle();if((angle<=45)&&(angle>=0))
return LEFT;else if((angle<=360)&&(angle>=315))
return LEFT;else if((angle>=135)&&(angle<=225))
return RIGHT;else if((angle>45)&&(angle<135))
return DOWN;else
return UP;}
function triggerHandler(event,phase,direction,distance)
{if(phase==PHASE_END)
{switch(direction)
{case LEFT:defaults.swipeLeft(event);break;case RIGHT:defaults.swipeRight(event);break;case UP:defaults.swipeUp(event);break;case DOWN:defaults.swipeDown(event);break;}
defaults.swipe(event,direction);}
if(defaults.swipeStatus)
defaults.swipeStatus(event,phase,direction||null,distance||0);}
this.addEventListener("touchstart",touchStart,false);this.addEventListener("touchmove",touchMove,false);this.addEventListener("touchend",touchEnd,false);this.addEventListener("touchcancel",touchCancel,false);});};})(jQuery);